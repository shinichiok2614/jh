package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAllPropertiesEquals(Image expected, Image actual) {
        assertImageAutoGeneratedPropertiesEquals(expected, actual);
        assertImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAllUpdatablePropertiesEquals(Image expected, Image actual) {
        assertImageUpdatableFieldsEquals(expected, actual);
        assertImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageAutoGeneratedPropertiesEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageUpdatableFieldsEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getImageContentType()).as("check image contenty type").isEqualTo(actual.getImageContentType()))
            .satisfies(e -> assertThat(e.getHeight()).as("check height").isEqualTo(actual.getHeight()))
            .satisfies(e -> assertThat(e.getWidth()).as("check width").isEqualTo(actual.getWidth()))
            .satisfies(e -> assertThat(e.getTaken()).as("check taken").isEqualTo(actual.getTaken()))
            .satisfies(e -> assertThat(e.getUploaded()).as("check uploaded").isEqualTo(actual.getUploaded()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImageUpdatableRelationshipsEquals(Image expected, Image actual) {
        assertThat(expected)
            .as("Verify Image relationships")
            .satisfies(e -> assertThat(e.getPerson()).as("check person").isEqualTo(actual.getPerson()))
            .satisfies(e -> assertThat(e.getAlbum()).as("check album").isEqualTo(actual.getAlbum()))
            .satisfies(e -> assertThat(e.getParagraph()).as("check paragraph").isEqualTo(actual.getParagraph()));
    }
}
