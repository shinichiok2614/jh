package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommentListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentListAllPropertiesEquals(CommentList expected, CommentList actual) {
        assertCommentListAutoGeneratedPropertiesEquals(expected, actual);
        assertCommentListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentListAllUpdatablePropertiesEquals(CommentList expected, CommentList actual) {
        assertCommentListUpdatableFieldsEquals(expected, actual);
        assertCommentListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentListAutoGeneratedPropertiesEquals(CommentList expected, CommentList actual) {
        assertThat(expected)
            .as("Verify CommentList auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentListUpdatableFieldsEquals(CommentList expected, CommentList actual) {
        assertThat(expected)
            .as("Verify CommentList relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentListUpdatableRelationshipsEquals(CommentList expected, CommentList actual) {
        assertThat(expected)
            .as("Verify CommentList relationships")
            .satisfies(e -> assertThat(e.getPost()).as("check post").isEqualTo(actual.getPost()));
    }
}
