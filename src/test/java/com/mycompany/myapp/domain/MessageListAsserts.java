package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MessageListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageListAllPropertiesEquals(MessageList expected, MessageList actual) {
        assertMessageListAutoGeneratedPropertiesEquals(expected, actual);
        assertMessageListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageListAllUpdatablePropertiesEquals(MessageList expected, MessageList actual) {
        assertMessageListUpdatableFieldsEquals(expected, actual);
        assertMessageListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageListAutoGeneratedPropertiesEquals(MessageList expected, MessageList actual) {
        assertThat(expected)
            .as("Verify MessageList auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageListUpdatableFieldsEquals(MessageList expected, MessageList actual) {
        assertThat(expected)
            .as("Verify MessageList relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMessageListUpdatableRelationshipsEquals(MessageList expected, MessageList actual) {
        assertThat(expected)
            .as("Verify MessageList relationships")
            .satisfies(e -> assertThat(e.getAuthor()).as("check author").isEqualTo(actual.getAuthor()))
            .satisfies(e -> assertThat(e.getReceiver()).as("check receiver").isEqualTo(actual.getReceiver()));
    }
}
