package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParagraphAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAllPropertiesEquals(Paragraph expected, Paragraph actual) {
        assertParagraphAutoGeneratedPropertiesEquals(expected, actual);
        assertParagraphAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAllUpdatablePropertiesEquals(Paragraph expected, Paragraph actual) {
        assertParagraphUpdatableFieldsEquals(expected, actual);
        assertParagraphUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphAutoGeneratedPropertiesEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphUpdatableFieldsEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getOrder()).as("check order").isEqualTo(actual.getOrder()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdateAt()).as("check updateAt").isEqualTo(actual.getUpdateAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParagraphUpdatableRelationshipsEquals(Paragraph expected, Paragraph actual) {
        assertThat(expected)
            .as("Verify Paragraph relationships")
            .satisfies(e -> assertThat(e.getPost()).as("check post").isEqualTo(actual.getPost()));
    }
}
